source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
gbmFit1
source('~/datapreparation.r', echo=TRUE)
library(caret)
datalegit<-read.csv('C:\\Users\\Shialos\\Documents\\dataimpost.csv')
dataimpost<-read.csv('C:\\Users\\Shialos\\Documents\\datalegit.csv')
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
summaryFunction = twoClassSummary,
classProbs = TRUE)
#data1 contains the legit data and data2 contains the corresponding impostor data
for (i in 3:3){
data1=datalegit[datalegit$userid==i,]
data2=dataimpost[dataimpost$userid==i,]
training=rbind(data1,data2)
bad <- sapply(training, function(x) any(is.na(x)))
training=training[,!bad]
training=subset(training,select=-c(userid))
training$legit<-as.factor(training$legit)
gbmFit1 <- train(legit ~ ., data = training,
method = "C5.0",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
metric = "ROC")
gbmFit1
}
gmbFit1
source('~/datapreparation.r', echo=TRUE)
library(caret)
gmbFit1
gbmFit1
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
gbmFit1$results
best(gbmFit1$results)
?best
library(caret)
?best
best(gbmFit1$results,metric="ROC",maximize=TRUE)
best(gbmFit1$results,metric="ROC",maximize=TRUE)
x=data.frame()
x=vec(1,2,3)
x=v(1,2,3)
x=vector(1,2,3)
x=c(1,2,3)
y=c(3,4,5)
c(x,y)
[x,y]
paok=data.frame(oleo=x,paokara=y)
paok
type(gbmFit1)
typeof(gbmFit1)
gbmFit1$results
gbmFit1
gbmFit1$results
gbmFit1$results[3,]
gbmFit1$results[3,:]
gbmFit1$results[3,]
gbmFit1$results[0,]
gbmFit1$results[-1,]
gbmFit1$results[-2,]
gbmFit1$results[-3,]
gbmFit1$results[-1,]
gbmFit1$results[-1,]
x
x[-3]
datalegit
datalegit$userid
datalegit$userid==1
library(caret)
datalegit<-read.csv('C:\\Users\\Shialos\\Documents\\dataimpost.csv')
dataimpost<-read.csv('C:\\Users\\Shialos\\Documents\\datalegit.csv')
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
summaryFunction = twoClassSummary,
classProbs = TRUE)
#data1 contains the legit data and data2 contains the corresponding impostor data
results=data.frame()
for (i in 3:3){
data1=datalegit[datalegit$userid==i,]
data2=dataimpost[dataimpost$userid==i,]
training=rbind(data1,data2)
bad <- sapply(training, function(x) any(is.na(x)))
training=training[,!bad]
#training=subset(training,select=-c(userid))
training$legit<-as.factor(training$legit)
gbmFit1 <- train(legit ~ ., data = training,
method = "C5.0",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
metric = "ROC")
gbmFit1
bestresult=best(gbmFit1$results,metric="ROC",maximize=TRUE)
results=rbind(results,gmbFit1$results[bestresult,])
}
gbmFit1
results=rbind(results,gmbFit1$results[bestresult,])
library(caret)
datalegit<-read.csv('C:\\Users\\Shialos\\Documents\\dataimpost.csv')
dataimpost<-read.csv('C:\\Users\\Shialos\\Documents\\datalegit.csv')
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
summaryFunction = twoClassSummary,
classProbs = TRUE)
#data1 contains the legit data and data2 contains the corresponding impostor data
results=data.frame()
for (i in 3:3){
data1=datalegit[datalegit$userid==i,]
data2=dataimpost[dataimpost$userid==i,]
training=rbind(data1,data2)
bad <- sapply(training, function(x) any(is.na(x)))
training=training[,!bad]
#training=subset(training,select=-c(userid))
training$legit<-as.factor(training$legit)
gbmFit1 <- train(legit ~ ., data = training,
method = "C5.0",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
metric = "ROC")
gbmFit1
bestresult=best(gbmFit1$results,metric="ROC",maximize=TRUE)
results=rbind(results,gbmFit1$results[bestresult,])
}
warnings()
cols(gbmFit1)
col(gbmFit1)
write.csv(data,"C:")
?write.csv
write.csv(data,"C:",sep=";")
library(caret)
datalegit<-read.csv('C:\\Users\\Shialos\\Documents\\dataimpost.csv')
dataimpost<-read.csv('C:\\Users\\Shialos\\Documents\\datalegit.csv')
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
summaryFunction = twoClassSummary,
classProbs = TRUE)
#data1 contains the legit data and data2 contains the corresponding impostor data
results=data.frame()
for (i in 1:3){
data1=datalegit[datalegit$userid==i,]
data2=dataimpost[dataimpost$userid==i,]
training=rbind(data1,data2)
bad <- sapply(training, function(x) any(is.na(x)))
training=training[,!bad]
#training=subset(training,select=-c(userid))
training$legit<-as.factor(training$legit)
gbmFit1 <- train(legit ~ ., data = training,
method = "C5.0",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
metric = "ROC")
gbmFit1
bestresult=best(gbmFit1$results,metric="ROC",maximize=TRUE)
results=rbind(results,gbmFit1$results[bestresult,])
}
bestresults
bestresult
results
results
results$ROC
mean(results$ROC)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(training)
source('~/.active-rstudio-document', echo=TRUE)
summary(training)
source('~/.active-rstudio-document', echo=TRUE)
summary(training)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Shialos/Desktop/legit_vs_impostor.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('e1071')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dir.create("data")
download.file(fileurl,destfile="C:\\Users\\Shialos\\Desktop\\RCoursera\\data.csv")
list.files("\\Rcoursera")
list.files(".\\Rcoursera")
first<-read.csv("data.csv")
first<-read.csv("C:\\Users\\Shialos\\Desktop\\RCoursera\\data.csv")
million<-first[VAL==24]
million<-[first$VAL==24]
million<-first[first$VAL==24]
million<-first[first$VAL=24]
nrow(first$VAL==24)
value<-[first$VAL]
value<-[[fisrt$VAL]]
value<-[fisrt$VAL==24]
value<-[fisrt$VAL==24,]
value<-[,fisrt$VAL==24]
value<-[,first$VAL==24]
value<-[first$VAL==24]
value<-[first$VAL==24,]
value<-[first$VAL=="24",]
value<-[first$VAL=="24"]
librart(data.table)
library(data.table)
install.packages("data.table")
library(data.table)
first
million<-first[VAL]
million<-first[first$VAL]
first$VAL
count[first$VAL]
sum(first$VAL)
sum(first$VAL==24)
million<-[first$VAL==24]
million<-first$VAL==24
sum(million)
million
is.true(million)
table(million)
fes<-first$FES
table(fes)
fileurl2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
dir.create("second")
download.file(fileurl2,destfile="C:\\Users\\Shialos\\Desktop\\RCoursera\\second.xlsx")
librart(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
rows<-18:23
cols<-7-15
dat<-read.xlsx("C:\\Users\\Shialos\\Desktop\\RCoursera\\second.xlsx",sheetIndex=1,
colIndex=cols,rowIndex=rows)
dat<- read.xlsx("C:\\Users\\Shialos\\Desktop\\RCoursera\\second.xlsx",sheetIndex=1,
colIndex=cols,rowIndex=rows)
data<-read.xlsx("C:\\Users\\Shialos\\Desktop\\RCoursera\\second.xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(xlsx)
if(!file.exists("data2")){dir.create("data2")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.xlsx",method="curl")
dateDownloaded <- date()
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileUrl,destfile="C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xlsx",method="curl")
download.file(fileUrl,destfile="C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xlsx")
download.file(fileUrl,destfile="C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls")
cols<-7:15
rows<-18:23
dat<-read.xlsx("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls",sheetIndex=1,
colIndex=cols,rowIndex=rows)
library(xlsx)
dat<-read.xlsx("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls",sheetIndex=1,
colIndex=cols,rowIndex=rows)
library(rJava)
dat<-read.xlsx("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls",sheetIndex=1,
colIndex=cols,rowIndex=rows)
dat<-read.csv("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.csv",sheetIndex=1,
colIndex=cols,rowIndex=rows)
dat<-read.csv("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.csv",
colIndex=cols,rowIndex=rows)
dat<-read.csv("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.csv")
dat<-read.xlsx("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls",sheetIndex=1,
colIndex=cols,rowIndex=rows)
library(XLConnect)
install.packages(XLConnect)
install.packages("XLConnect")
dat <- readWorksheet(loadWorkbook(""C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls"),sheet=1,colIndex=cols,rowIndex=rows")
dat <- readWorksheet(loadWorkbook(""C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls"),sheet=1)
dat <- readWorksheet(loadWorkbook("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xlsX"),sheet=1)
dat <- readWorksheet(loadWorkbook("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xlsx"),sheet=1)
library(XLConnect)
dat<-read.xlsx2("C:\\Users\\Shialos\\Desktop\\RCoursera\\data2.xls",sheetIndex=1,
colIndex=cols,rowIndex=rows)
library(xlsx)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
temp[1]*temp[2,]
1.645*2/5
0.658+12
mean1=mean(140,138,150,148,135)
sd1=std(140,138,150,148,135)
sd1=sd(140,138,150,148,135)
data1<-c(140,138,150,148,135)
data2<-c(132,135,151,146,130)
mean1=mean(data1)
mean2=mean(data2)
sd1=sd(data1)
sd2=sd(data2)
nm=(mean1-mean2)
sdn=sqrt((sd1^2+sd2^2)/5)
t.test(data1,data2,paired=TRUE,var.equal=FALSE)
pt(0.75,4)
pbinom(3,4,0.5,lower.tail=FALSE)
1-ppois(6,10,lower.tail=FALSE)
pnorm(1.645-2.5,lower.tail=FALSE)
pnorm(-2)
pnorm(-1,lower.tail=FALSE)
pnorm(-1.645,lower.tail=FALSE)
pnorm(-1.1,lower.tail=FALSE)
pnorm(-1.2,lower.tail=FALSE)
pnorm(-1.25,lower.tail=FALSE)
pnorm(-1.26,lower.tail=FALSE)
pnorm(-1.27,lower.tail=FALSE)
pnorm(-1.28,lower.tail=FALSE)
pnorm(-1.3,lower.tail=FALSE)
pnorm(-1.29,lower.tail=FALSE)
pnorm(-1.285,lower.tail=FALSE)
pnorm(-1.281,lower.tail=FALSE)
pnorm(-1.282,lower.tail=FALSE)
an=1.282+1.645
an*4
11.708^2
37/40
48/40
38/40
data(mtcars)
summary(mtcars)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?mtcars
source('~/.active-rstudio-document', echo=TRUE)
cor(mtcars, use="complete.obs", method="kendall")
source('~/.active-rstudio-document', echo=TRUE)
fit5
source('~/.active-rstudio-document', echo=TRUE)
fit5
summary(fit5)
summary(fit1)
summary(fit2)
summary(fit3)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(fit5)
coef
fit3 <- lm(mpg ~ am + wt+log(hp)-1)
dat=mtcars
data(mtcars)
fit3 <- lm(mpg ~ am + wt+log(hp)-1,data=mtcars)
summary(fit3)
fit3$coef
fit1<-lm(mpg~am-1,data=mtcars)
fit2 <- update(fit1, mpg ~ am + wt-1)
fit3 <- update(fit2, mpg ~ am + wt+log(hp)-1)
fit3
fit3$coef
fit3$coef[1]
fit3 <- update(fit2, mpg ~ am + wt+hp-1)
fit3
fit3<-lm(mpg~am+wt+log(hp)-1,data=mtcars)
fit3
fit3<-lm(mpg~am+wt+cyl-1,data=mtcars)
fit3
mtcars$cyl<-as.factor(mtcars£cyl)
mtcars$cyl<-as.factor(mtcars$cyl)
mtcars$am<-as.factor(mtcars$am)
fit3<-lm(mpg~am+wt+cyl-1,data=mtcars)
fit3
fit3<-lm(mpg~am+wt+log(hp-1,data=mtcars)
fit3<-lm(mpg~am+wt+log(hp-1,data=mtcars)
fit3<-lm(mpg~am+wt+log(hp)-1,data=mtcars)
fit3
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
fit3
summary(fit3)
str(fit3)
summary(fit3)
summary(fit3)$coef
summary(fit3)$coef[1,4]
data(mtcars)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
data(MASS)
library(MASS)
dat<-data(shuttle)
data(shuttle)
summary(shuttle)
fit<-glm(use~wind,data=shuttle)
fit<-glm(shuttle$use~shuttle$wind)
fit<-glm(shuttle$use~shuttle$wind,family="binomial")
summary(fit)
confint(fit)
exp(fit$coeff)
0.969/0.7777
fit<-glm(shuttle$use~shuttle$wind+shuttle$mgn,family="binomial")
fit<-glm(shuttle$use~shuttle$wind+shuttle$magn,family="binomial")
summary(fit)
exp(fit$coeff)
fit<-glm(shuttle$use~shuttle$wind,family="binomial")
fit2<-glm(I(1-shuttle$use)~shuttle$wind,family="binomial")
fit2<-glm(I(shuttle$use-1)~shuttle$wind,family="binomial")
data(InsectSprays)
summary(InsectSprays)
fit2<-glm(InsectSprays$count~InsectSprays$spray,family="poisson")
summary(fit2)
exp(fit2$coeff)
1/1.05747
fit2<-glm(InsectSprays$count~I(log(InsectSprays$spray),family="poisson")
s
summary(shuttle)
data(mtcars)
mtcars$am<-as.factor(mtcars$am)
fit<-glm(mtcars$mpg~am+log(wt),family="poisson")
fit<-glm(mtcars$mpg~mtcars$am+log(mtcars$wt),family="poisson")
fit
fit<-glm(mtcars$mpg~mtcars$am+I(1+mtcars$wt),family="poisson")
fit2<-glm(mtcars$mpg~mtcars$am+log(mtcars$wt),family="poisson")
fit
fit2
fit1<-glm(mtcars$mpg~mtcars$am+log(mtcars$wt),family="poisson")
fit2<-glm(mtcars$mpg~mtcars$am+log(1+mtcars$wt),family="poisson")
fit1
fit2
fit3<-glm(mtcars$mpg~mtcars$am+I(log(10)+log(mtcars$wt)),family="poisson")
fit3
fit1
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
knot<-0
splineTerms <- sapply(knot, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
yhat
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
data(cars)
myPlot <- function(s) {
+     plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
+     abline(0, s)
+ }
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
require(rCharts)
install.packages("rCharts")
install.packages("devtools")
library(devtools)
install.packages("rtools")
install_github('slidify','ramnathv')
install_github('slidify','ramnathv')
update.packages(ask='graphics',checkBuilt=TRUE)
q()
setwd("C:/Users/Shialos/Desktop/RCoursera/Shiny_Presentation")
publish(user="michalis556",repo="michalis556.github.io")
library(slidify)
publish(user="michalis556",repo="michalis556.github.io")
publish(user="michalis556",repo="slidify")
